

주사위

seed := time.Now().Unix()
rand.Seed(seed)

for i := 1; i<6; i++{
	dice := rand.Intn (6) + 1  //주사위
	fmt.Println(dice)
}
---------------------------------------------------------
임의의 소수 판정

seed := time.Now().Unix()
rand.Seed(seed)

count :=0
number := rand.Intn(150) + 2 // 0과 1제외 2~151사이의 수

for i := 2; i < number; i++{ 1과 number일때 loop 돌지 않음
	if number %i == 0{
		count ++
	}
}

if count == 0{
	fmt.Println(number,"는 소수입니다!")
}
else{
	fmt.Println(number,"는 소수가 아닙니다!")

}


입력된 수 소수 판정

func main(){
	var number int
	fmt.Print("정수 입력:")
	_, err := fmt.Scanln(&number)

	if err != nil {
		log.Fatal(err)
	}

	for number < 2 {
		fmt.Println(number,"는 소수가 아닙니다")
		os.Exit(0)
	}

	isPrime := true
	

	for i := 2; i <number; i++ {
		if number % 1 == 0 {
			isPrime = false
			break
		}
	}

	if isPrime == true {
		fmt.println(number,"는 소수입니다")
	} else {
		fmt.println(number,"는 X")
	}
}
----------------------------------------------------------------
shadowing - 변수명을 '자료타입 , 패키지, 함수' 이름으로 사용 할 시 오류

var float64 float64 = 9.1
var test float64 = 7.9
fmt.Println(float64) // 오류

var fmt string = "inha"
fmt. // 오류

var append string = "func"
var f = append([]string{}, "함수") // 오류

------------------------------------------------------------------
점수 평균 구하기 함수

func processScore(name string, kor int, eng int, math int){
	totalScore = kor + eng + math
	average = totalScore / 3.0

	fmt.Printf("%s님의 총점은 %d점, 평균은 %f점 입니다.",name, totalScore, average)

func main() {
	processScore("홍",100,90,93)
	processScore("몽",89,91,92)
	

==============================================================
var - 변수선언
:= - 변수선언 ( a := 7.3 >> a = 5(float(5.0) O, a:= 7 >> a = 5.3(int) X 형변환 필요)

변수명은 영문자로 시작
영문 대문자로 시작할 경우 다른 패키지에서 접근할 수 있다.
소문자로 시작하는 변수는 동일 패키지에서만 접근 가능하다

package main필수

reflect 패키지 - typeof

math/rand 패키지 - 난수 발생
time 패키지 // seed 생성용 패키지

bufio 패키지, os 패키지
bufio.NewReader(os.Stdin)

func 함수명(){
	fmt.Println("!@#!#")
}

func main(){
	함수명()
}

rune - ' ' 문자열
rune = int32 4byte

println - 문자가 아닌 숫자(유니코드 UTF-8)
printf - 문자 그대로 %c 한글자 출력 %T(=type of) rune = int32

2byte = int16

go에는 while이 없다(for형태)


====================================================================

cd .\syntax02\

go mod init gowork/syntax02

go build
.\syntax.exe

go run .\파일이름.go







